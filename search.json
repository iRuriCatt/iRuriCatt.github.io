[{"title":"git","url":"/2024/08/22/git/","content":"<h1 id=\"什么是-git\"><a class=\"anchor\" href=\"#什么是-git\">#</a> 什么是 git？</h1>\n<blockquote>\n<ul>\n<li>Git 是一个免费开源的分布式版本控制系统，它使用一个特殊的名为仓库的数据库来记录文件的变化</li>\n<li>仓库中的每个文件都有一个完整的版本历史记录，可以看到谁在什么时间修改了哪些文件的哪些内容，在需要时也可以将文件恢复到之前的某个版本</li>\n<li>有了版本控制系统，我们就可以跟踪每个文件的变化，让项目成员之间的协作更加高效</li>\n<li>目前世界上最流行的版本控制系统有两种\n<ul>\n<li>集中式版本控制系统，如 SVN、CVS 等</li>\n<li>分布式版本控制系统，如 Git、Mercurial 等</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"集中式版本控制系统\"><a class=\"anchor\" href=\"#集中式版本控制系统\">#</a> 集中式版本控制系统</h2>\n<ul>\n<li>工作流程\n<ul>\n<li>所有文件都保存在中央服务器上，每个人的电脑上只保存了一个副本</li>\n<li>当需要修改文件时，要先从中央服务器上下载最新的版本，然后再添加想要的修改内容，修改完成后再上传回中央服务器</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240814120734843.png\" class title=\"image-20240814120734843\">\n<ul>\n<li>\n<p>优点</p>\n<ul>\n<li>使用简单，只需要从中央服务器上下载最新的版本，修改完成后再上传到中央服务器上即可，不需要考虑其他问题</li>\n</ul>\n</li>\n<li>\n<p>缺点</p>\n<ul>\n<li>中央服务器的单点故障问题：如果中央服务器出现故障或者网络连接出现问题，那么所有人都无法工作了，只能等待中央服务器或者网络恢复正常</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分布式版本控制系统\"><a class=\"anchor\" href=\"#分布式版本控制系统\">#</a> 分布式版本控制系统</h2>\n<ul>\n<li>工作流程\n<ul>\n<li>每个人的电脑上都有一个完整的版本库，因此可以在本地进行修改，不需要考虑网络问题，即使中央服务器出现故障，也可以继续工作</li>\n<li>当需要将修改内容分享给其他人时，只需要将仓库互相同步一下即可</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240814121426834.png\" class title=\"image-20240814121426834\">\n<h1 id=\"git-的初始化配置\"><a class=\"anchor\" href=\"#git-的初始化配置\">#</a> Git 的初始化配置</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"Your Name\"</span>\t\t配置用户名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"mail@example.com\"</span>\t配置邮箱</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> credential.helper store\t\t存储配置</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--list</span>\t\t\t\t查看配置信息</pre></td></tr></table></figure><ul>\n<li>注：\n<ul>\n<li>省略（Local）：本地配置，只对本地仓库有效</li>\n<li><code>--global</code> ：全局配置，所以仓库生效</li>\n<li><code>--system</code> ：系统配置，对所有用户生效</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"新建版本库仓库\"><a class=\"anchor\" href=\"#新建版本库仓库\">#</a> 新建版本库（仓库）</h1>\n<blockquote>\n<p>版本库又叫仓库（Repository，简称 Repo），可以将仓库理解成一个目录，这个目录里面所有的文件都可以被 Git 管理起来，每个文件的修改、删除、添加等操作，Git 都能跟踪到，以便任何时候都可以追踪历史或者还原到之前的某一个版本</p>\n</blockquote>\n<ul>\n<li>\n<p>创建一个仓库非常简单，只需要将一个目录变成 Git 可以管理的仓库即可</p>\n</li>\n<li>\n<p>一般来说，可以通过两种方式创建仓库</p>\n<ul>\n<li><code>git init &lt;project-name&gt;</code> ：在自己电脑本地直接创建一个仓库（省略 project-name 则在当前目录创建）</li>\n<li><code>git clone &lt;url&gt;</code> ：从远程服务器上克隆一个已经存在的仓库</li>\n</ul>\n</li>\n<li>\n<p>创建本地仓库</p>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240816230748069.png\" class title=\"image-20240816230748069\">\n<img data-src=\"/2024/08/22/git/image-20240816231007617.png\" class title=\"image-20240816231007617\">\n<img data-src=\"/2024/08/22/git/image-20240816231535609.png\" class title=\"image-20240816231535609\">\n<ul>\n<li>\n<p><code>.git</code>  这个目录存放了 Git 仓库的所有数据</p>\n</li>\n<li>\n<p><code>.git</code>  中的文件和目录都是 Git 仓库的重要组成部分，不能随意删除或者修改这些文件的内容，否则会破坏 Git 仓库</p>\n</li>\n<li>\n<p>克隆远程仓库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/geekhall-laoyang/remote-repo.git</pre></td></tr></table></figure><img data-src=\"/2024/08/22/git/image-20240816232500401.png\" class title=\"image-20240816232500401\">\n<h1 id=\"git-的工作区域和文件状态\"><a class=\"anchor\" href=\"#git-的工作区域和文件状态\">#</a> Git 的工作区域和文件状态</h1>\n<h2 id=\"git-的工作区域\"><a class=\"anchor\" href=\"#git-的工作区域\">#</a> Git 的工作区域</h2>\n<ul>\n<li>\n<p>Git 的本地数据管理分为三个区域，分别是工作区、暂存区、本地仓库</p>\n</li>\n<li>\n<p>工作区（Working Directory）：电脑里能实际看到的目录</p>\n</li>\n<li>\n<p>暂存区（Staging Area）：也叫索引，用来临时存放未提交的内容，一般在 .git 目录下的 index 中</p>\n</li>\n<li>\n<p>本地仓库（Local Repository）：Git 在本地的版本库，它包含了完整的项目历史和元数据，是 Git 存储代码和版本信息的主要位置，仓库信息存储在.git 这个隐藏目录中</p>\n</li>\n<li>\n<p>远程仓库（Remote Repository）：托管在远程服务器上的仓库。常用的有 GitHub、GitLab、Gitee</p>\n</li>\n<li>\n<p>简单来说</p>\n<ul>\n<li>工作区是实际操作的目录，暂存区是中间区域，用于临时存放即将提交的修改内容，本地仓库是 Git 存储代码和版本信息的主要位置</li>\n</ul>\n</li>\n<li>\n<p>流程</p>\n<ul>\n<li>当修改完工作区的文件后，需要将它们添加到暂存区，然后再将暂存区的修改提交到本地仓库中</li>\n</ul>\n</li>\n<li>\n<p>该过程可以使用 Git 提供的命令来查看、比较或者撤销修改内容，来保证版本控制的准确性和完整性</p>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240816233625951.png\" class title=\"image-20240816233625951\">\n<h2 id=\"文件状态\"><a class=\"anchor\" href=\"#文件状态\">#</a> 文件状态</h2>\n<table>\n<thead>\n<tr>\n<th>文件状态</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>未跟踪（Untrack）</td>\n<td>新创建的还没有被 Git 管理起来的文件</td>\n</tr>\n<tr>\n<td>未修改（Unmodified）</td>\n<td>已经被 Git 管理起来，但是文件的内容没有发生变化，还没有被修改过</td>\n</tr>\n<tr>\n<td>已修改（Modified）</td>\n<td>已经修改了的文件，但是还没有添加到暂存区里面</td>\n</tr>\n<tr>\n<td>已暂存（Staged）</td>\n<td>修改后并且已经添加到了暂存区域内的文件</td>\n</tr>\n<tr>\n<td>已提交（Committed）</td>\n<td>把暂存区的文件提交到本地仓库后的状态</td>\n</tr>\n</tbody>\n</table>\n<img data-src=\"/2024/08/22/git/image-20240816234201934.png\" class title=\"image-20240816234201934\">\n<h1 id=\"添加和提交文件\"><a class=\"anchor\" href=\"#添加和提交文件\">#</a> 添加和提交文件</h1>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>git status</code></td>\n<td>查看仓库的状态，列出还未提交的新的或修改的文件</td>\n</tr>\n<tr>\n<td><code>git log</code> <br> <code>git log --oneline</code></td>\n<td>查看提交记录<br>使用 <code>--oneline</code>  参数查看简洁的提交记录</td>\n</tr>\n<tr>\n<td><code>git add</code></td>\n<td>将文件添加到暂存区，等待后续的提交操作<br>可以使用通配符，如： <code>git add *.txt</code> <br>可以使用目录，如： <code>git add .</code></td>\n</tr>\n<tr>\n<td><code>git commit -m &quot;提交的信息&quot;</code></td>\n<td>将文件提交到仓库中（只会提交暂存区中的文件）<br>如果不指定 - m，则会进入交互模式（默认使用 vim 进行编辑）</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>创建文件，查看文件状态</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817000813475.png\" class title=\"image-20240817000813475\">\n<ul>\n<li>将文件添加到暂存区\n<ul>\n<li><code>git rm --cache &lt;file&gt;</code> ：可以取消暂存</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817001518557.png\" class title=\"image-20240817001518557\">\n<ul>\n<li>将暂存区中的文件提交到仓库中</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817002327619.png\" class title=\"image-20240817002327619\">\n<ul>\n<li><code>git add</code>  还可以使用通配符来添加多个文件\n<ul>\n<li>示例： <code>git add *.txt</code></li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817002727517.png\" class title=\"image-20240817002727517\">\n<ul>\n<li><code>git add</code>  还可以接受文件夹作为参数\n<ul>\n<li>比如想要添加所有文件的话，使用 <code>git add .</code> （这里的点表示当前目录）</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817003134519.png\" class title=\"image-20240817003134519\">\n<ul>\n<li><code>git log</code> ：查看提交记录</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817003328784.png\" class title=\"image-20240817003328784\">\n<ul>\n<li><code>git log --oneline</code> ：查看简洁的提交记录</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817003445556.png\" class title=\"image-20240817003445556\">\n<h1 id=\"回退版本\"><a class=\"anchor\" href=\"#回退版本\">#</a> 回退版本</h1>\n<blockquote>\n<p>reset 命令用于回退版本，可以退回到之前的某一个提交的状态</p>\n</blockquote>\n<ul>\n<li>语法格式</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--mixed</span> <span class=\"token operator\">&lt;</span>commit-id<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>三种模式</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--soft</span>\t表示回退到某一个版本，并且保留工作区和暂存区的所有修改内容</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span>\t表示回退到某一个版本，并且丢弃工作区和暂存区的所有修改内容</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--mixed</span>\t表示回退到某一个版本，并且只保留工作区的修改内容，丢弃暂存区的修改内容</pre></td></tr></table></figure><ul>\n<li>\n<p>mixed 是 reset 命令的默认参数</p>\n</li>\n<li>\n<p>示例</p>\n<ul>\n<li>创建三个文件，并依次提交</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817133414055.png\" class title=\"image-20240817133414055\">\n<ul>\n<li><code>--soft</code></li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817133502744.png\" class title=\"image-20240817133502744\">\n<ul>\n<li>查看工作区的内容：file3.txt 文件还在</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817133701257.png\" class title=\"image-20240817133701257\">\n<ul>\n<li>查看暂存区的内容</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817134228875.png\" class title=\"image-20240817134228875\">\n<ul>\n<li><code>git status</code></li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817134350787.png\" class title=\"image-20240817134350787\">\n<ul>\n<li><code>--hard</code></li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817134838576.png\" class title=\"image-20240817134838576\">\n<ul>\n<li><code>--mixed</code></li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817135314990.png\" class title=\"image-20240817135314990\">\n<ul>\n<li>\n<p>一般来说，当连续提交了多个版本，但又觉得这些提交没有太大意义，可以合并成一个版本时，便可以通过 <code>--soft</code>  和 <code>--mixed</code>  这两个参数来进行回退后重新提交</p>\n</li>\n<li>\n<p>这两个参数的主要区别是：在重新提交之前， <code>--mixed</code>  需要执行一下 <code>git add</code>  操作来将变动的内容重新添加到暂存区，而 <code>--soft</code>  则不需要，因为暂存区没有被清空</p>\n</li>\n<li>\n<p><code>--hard</code>  的使用场景：真的要放弃目前本地的所有修改内容（谨慎使用）</p>\n</li>\n<li>\n<p>如果出现了失误操作也没关系，Git 中的所有操作都是可以回溯的，可以使用 <code>git reflog</code>  命令来查看操作的历史记录，然后找到误操作之前的版本号，再使用 <code>git reset</code>  命令来回退到该版本即可</p>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817140337270.png\" class title=\"image-20240817140337270\">\n<h1 id=\"查看差异\"><a class=\"anchor\" href=\"#查看差异\">#</a> 查看差异</h1>\n<img data-src=\"/2024/08/22/git/image-20240817140515468.png\" class title=\"image-20240817140515468\">\n<ul>\n<li>语法格式</li>\n<li><code>git diff</code>\n<ul>\n<li>默认比较的是工作区和暂存区之间的差异内容（因为修改后还没提交到暂存区），会显示发生更改的文件以及更改的详细信息</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817141148674.png\" class title=\"image-20240817141148674\">\n<ul>\n<li><code>git diff HEAD</code>\n<ul>\n<li>比较工作区和版本库之间的差异（添加的内容还没有被提交到仓库中）</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817141346029.png\" class title=\"image-20240817141346029\">\n<ul>\n<li><code>git diff --cached</code>\n<ul>\n<li>比较暂存区和版本库之间的差异</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817141603317.png\" class title=\"image-20240817141603317\">\n<ul>\n<li><code>git diff &lt;commit-id&gt; &lt;commit-id&gt;</code>\n<ul>\n<li>查看两个提交之间的差异</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817141913396.png\" class title=\"image-20240817141913396\">\n<ul>\n<li>\n<p><code>git diff 39ab5d2 HEAD</code></p>\n<ul>\n<li><code>HEAD</code> ：指向分支的最新提交节点</li>\n<li><code>HEAD~ / HEAD^</code> ：表示上一个版本</li>\n<li><code>HEAD~数字</code> ：表示提交之前的第 n 个版本</li>\n</ul>\n</li>\n<li>\n<p><code>git diff HEAD~3 HEAD file3.txt</code></p>\n<ul>\n<li>表示只查看文件 file3.txt 的差异</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817143441186.png\" class title=\"image-20240817143441186\">\n<ul>\n<li><code>git diff 分支1 分支2</code>\n<ul>\n<li>查看两个分支之间的差异，直接加上两个分支名即可</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"删除文件\"><a class=\"anchor\" href=\"#删除文件\">#</a> 删除文件</h1>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>rm file</code> <br> <code>git add file</code></td>\n<td>先从工作区删除文件，然后再暂存删除内容</td>\n</tr>\n<tr>\n<td><code>git rm &lt;file&gt;</code></td>\n<td>把文件从工作区和暂存区同时删除</td>\n</tr>\n<tr>\n<td><code>git rm --cached &lt;file&gt;</code></td>\n<td>把文件从暂存区删除，但保留在当前工作区中</td>\n</tr>\n<tr>\n<td><code>git rm -r *</code></td>\n<td>递归删除某个目录下的所有子目录和文件</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>删除后记得提交！</li>\n</ul>\n<h1 id=\"gitignore忽略文件\"><a class=\"anchor\" href=\"#gitignore忽略文件\">#</a>  <code>.gitignore</code>  忽略文件</h1>\n<blockquote>\n<p>这个文件的作用就是可以忽略掉一些不应该被加入到版本库中的文件，这样可以让仓库体积更小、更加干净</p>\n</blockquote>\n<ul>\n<li>\n<p>应该忽略哪些文件？</p>\n<ul>\n<li>系统或软件自动生成的文件，比如一些工具或软件产生的临时文件</li>\n<li>编译生成的中间文件、可执行文件等</li>\n<li>运行过程中生成的日志文件、缓存文件、临时文件</li>\n<li>设计身份、密码、口令、秘钥等敏感信息文件</li>\n</ul>\n</li>\n<li>\n<p>可以在这个文件中列出需要忽略的文件的模式，这样这些文件就不会被添加到版本库</p>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817145012147.png\" class title=\"image-20240817145012147\">\n<ul>\n<li>创建两个日志文件</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817145553025.png\" class title=\"image-20240817145553025\">\n<ul>\n<li>将 access.log 添加到 .gitignore 中</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817145718133.png\" class title=\"image-20240817145718133\">\n<ul>\n<li>提交文件后，access.log 并没有被提交到版本库中</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817145814552.png\" class title=\"image-20240817145814552\">\n<ul>\n<li>\n<p><code>.gitignore</code>  文件生效的前提是：文件不能是已经被添加到版本库中的文件</p>\n</li>\n<li>\n<p><code>*.log</code>  写入文件中，忽略所有日志文件</p>\n</li>\n<li>\n<p>PS：空文件夹是不会被 git 管理起来的</p>\n</li>\n<li>\n<p>添加要忽略的文件夹： <code>temp/</code></p>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817150654015.png\" class title=\"image-20240817150654015\">\n<ul>\n<li>查看仓库状态： <code>git status -s</code>\n<ul>\n<li>M 表示文件被修改过</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817151224013.png\" class title=\"image-20240817151224013\">\n<ul>\n<li>提交文件 <code>git commit -am &quot;test ignore folder&quot;</code>\n<ul>\n<li>temp 文件没有被提交到仓库中</li>\n<li><code>-am</code>  指添加到暂存和提交这两步操作合为一步</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817151338011.png\" class title=\"image-20240817151338011\">\n<ul>\n<li>\n<p><code>.gitignore</code>  文件的匹配规则</p>\n<ul>\n<li>从上到下逐行匹配，每一行表示一个忽略模式</li>\n<li>空行或者以 <code>#</code> 开头的行会被 Git 忽略。一般空行用于可读性的分隔， <code>#</code> 一般用作注释</li>\n<li>使用标准的 Blob 模式匹配（指 shell 所使用的简化了的正则表达式）\n<ul>\n<li><code>*</code>  通配任意个字符</li>\n<li><code>?</code>  匹配单个字符</li>\n<li><code>[]</code>  表示匹配列表中的单个字符，比如：[abc] 表示 a/b/c</li>\n</ul>\n</li>\n<li><code>**</code>  表示匹配任意的中间目录</li>\n<li>中括号可以使用短中线连接，比如\n<ul>\n<li><code>[0-9]</code>  表示任意一位数字， <code>[a-z]</code>  表示任意一位小写字母</li>\n</ul>\n</li>\n<li><code>!</code>  表示取反\n<ul>\n<li>要忽略指定模式以外的文件或者目录，取反即可</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>示例</p>\n</li>\n</ul>\n<pre><code># 忽略所有的.a文件\n*.a\n\n# 但跟踪所有的lib.a，即便你在前面忽略了.a文件\n!lib.a\n\n# 只忽略当前目录下的TODO文件，而不忽略子目录下的/TODO\n/TODO\n\n# 忽略任何目录下名为build的文件夹\nbuild/\n\n# 忽略doc/notes.txt，但不忽略doc/server/arch.txt（doc子目录下面的txt文件）\ndoc/*.txt\n\n# 忽略doc/目录及其所有子目录下的.pdf文件\ndoc/**/*.pdf\n</code></pre>\n<ul>\n<li>GitHub 上提供了各种常用语言的忽略文件的模板，在新建仓库时可以直接使用，也可以根据自己需要进行修改</li>\n</ul>\n<h1 id=\"远程仓库\"><a class=\"anchor\" href=\"#远程仓库\">#</a> 远程仓库</h1>\n<h2 id=\"github-gitee\"><a class=\"anchor\" href=\"#github-gitee\">#</a> GitHub / Gitee</h2>\n<h3 id=\"ssh配置\"><a class=\"anchor\" href=\"#ssh配置\">#</a> SSH 配置</h3>\n<ul>\n<li>生成 SSH 秘钥\n<ul>\n<li>输入密钥名称（如果是第一次生成，则直接回车，如果是已经配置过 SSH 密钥了，则需要指定新的名称，如 test）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-b</span> <span class=\"token number\">4096</span></pre></td></tr></table></figure><img data-src=\"/2024/08/22/git/image-20240817163839137.png\" class title=\"image-20240817163839137\">\n<ul>\n<li>复制公钥信息到 GitHub 上</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240817164208138.png\" class title=\"image-20240817164208138\">\n<ul>\n<li>如果是指定了新的文件名，需要增加一步新的配置，将以下内容写入 config 文件\n<ul>\n<li><code>tail -5 config</code> ：查看 config 文件最后 5 行内容</li>\n<li>这个配置文件的意思是：当访问 GitHub 时，指定使用 SSH 下的 test 这个秘钥</li>\n</ul>\n</li>\n</ul>\n<pre><code># github\nHost github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/test\n</code></pre>\n<h3 id=\"克隆远程仓库\"><a class=\"anchor\" href=\"#克隆远程仓库\">#</a> 克隆远程仓库</h3>\n<ul>\n<li>生成好 SSH 秘钥之后，回到本地仓库执行 <code>git clone</code>  命令</li>\n<li>Tips：如果创建秘钥的时候没有输入密码，则可以直接回车</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240819140745119.png\" class title=\"image-20240819140745119\">\n<ul>\n<li>\n<p>注意</p>\n<ul>\n<li>本地仓库和远程仓库是两个独立的仓库，在本地仓库做的任何修改都不会影响到远程仓库，在远程仓库中做修改也不会影响到本地仓库</li>\n<li>因此需要一种机制来同步本地仓库和远程仓库的修改内容，让它们的状态保持一致</li>\n</ul>\n</li>\n<li>\n<p><code>git push</code> ：把本地仓库的修改推送给远程仓库</p>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240819141325292.png\" class title=\"image-20240819141325292\">\n<img data-src=\"/2024/08/22/git/image-20240819141258018.png\" class title=\"image-20240819141258018\">\n<ul>\n<li><code>git pull &lt;远程仓库名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code> ：把远程仓库的修改拉取到本地仓库</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240819145404472.png\" class title=\"image-20240819145404472\">\n<ul>\n<li>执行完 <code>git pull</code> ，Git 会自动执行一次合并操作，如果远程仓库中的修改内容和本地仓库中的修改内容没有冲突的话，那么合并操作就会成功，否则合并操作就会因为冲突而失败，此时需要手动解决冲突</li>\n<li>从远程仓库获取内容还可以使用 <code>fetch</code>  命令</li>\n<li>两者的区别\n<ul>\n<li><code>fetch</code>  只是获取远程仓库的修改，并不会自动合并到本地仓库中，需要手动合并</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"关联本地仓库和远程仓库\"><a class=\"anchor\" href=\"#关联本地仓库和远程仓库\">#</a> 关联本地仓库和远程仓库</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>远程仓库别名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>远程仓库地址<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">&lt;</span>远程仓库名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>分支名<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>示例</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:eu8188/first-repo.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-M</span> master\t<span class=\"token comment\"># 指定分支的名称为 master，可省略</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin master:master  <span class=\"token comment\"># 把本地的 master 分支和远程的 origin 仓库的 master 分支关联起来</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ps：后面的:master可以省略，因为本地分支的名称和远程分支的名称相同</pre></td></tr></table></figure><ul>\n<li>执行完再使用 <code>git remote -v</code>  查看\n<ul>\n<li>可以查看当前仓库所对应的远程仓库的别名和地址</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240819142858363.png\" class title=\"image-20240819142858363\">\n<img data-src=\"/2024/08/22/git/image-20240819142910300.png\" class title=\"image-20240819142910300\">\n<ul>\n<li>注：Gitee 的操作和 GitHub 基本一致</li>\n</ul>\n<h2 id=\"gitlab\"><a class=\"anchor\" href=\"#gitlab\">#</a> GitLab</h2>\n<ul>\n<li>感觉暂时不需要懂，先空着</li>\n</ul>\n<h1 id=\"gui-工具\"><a class=\"anchor\" href=\"#gui-工具\">#</a> GUI 工具</h1>\n<ul>\n<li>GitHub Desktop</li>\n<li>SourceTree</li>\n<li>GitKraken</li>\n<li>VSCode 扩展 GitLens</li>\n</ul>\n<h1 id=\"在-vscode-中使用-git\"><a class=\"anchor\" href=\"#在-vscode-中使用-git\">#</a> 在 VSCode 中使用 Git</h1>\n<ul>\n<li>\n<p>ctrl + shift + p：打开命令面板</p>\n</li>\n<li>\n<p>设置 gitbash 为默认终端</p>\n<ul>\n<li>打开设置搜索： <code>terminal.integrated.profiles.windows</code></li>\n<li>添加</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"git.path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D:\\Develop\\Git\\bin\\git.exe\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"terminal.integrated.profiles.windows\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"Git Bash\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Git Bash\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D:\\\\Develop\\\\Git\\\\bin\\\\git.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token property\">\"terminal.integrated.defaultProfile.windows\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Git Bash\"</span></pre></td></tr></table></figure><img data-src=\"/2024/08/22/git/image-20240819171032514.png\" class title=\"image-20240819171032514\">\n</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240819171056677.png\" class title=\"image-20240819171056677\">\n<ul>\n<li>文件状态</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>??(Untracked)</code></td>\n<td>未跟踪</td>\n</tr>\n<tr>\n<td><code>M(Modified)</code></td>\n<td>已修改</td>\n</tr>\n<tr>\n<td><code>A(Added)</code></td>\n<td>已添加暂存</td>\n</tr>\n<tr>\n<td><code>D(Deleted)</code></td>\n<td>已删除</td>\n</tr>\n<tr>\n<td><code>R(Renamed)</code></td>\n<td>重命名</td>\n</tr>\n<tr>\n<td><code>U(Updated)</code></td>\n<td>已更新未合并</td>\n</tr>\n</tbody>\n</table>\n<img data-src=\"/2024/08/22/git/image-20240819171810766.png\" class title=\"image-20240819171810766\">\n<h1 id=\"分支\"><a class=\"anchor\" href=\"#分支\">#</a> 分支</h1>\n<blockquote>\n<ul>\n<li>可以把分支看作是代码库中的不同版本，可以独立存在，并且有自己的提交记录</li>\n<li>分支适合团队协作和开发管理，比如多个开发人员可以在自己的分支上进行开发工作，最后再合并到主线代码库中</li>\n<li>也可以在一个分支上进行新功能的开发，或者建立一个问题修复的分支来处理一些 bug 和缺陷，这样就可以让主线代码仓库处于一个随时可用的比较稳定的状态，而不会影响到其他功能的开发和测试，保证了项目的正常运行和高效协作</li>\n<li>分支的优点就是能够提高团队协作的效率，减少冲突和错误的影响，让团队中的每个人都能够独立开发和测试</li>\n</ul>\n</blockquote>\n<img data-src=\"/2024/08/22/git/image-20240819173127591.png\" class title=\"image-20240819173127591\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>git branch</code></td>\n<td>查看分支列表</td>\n</tr>\n<tr>\n<td><code>git branch branch-name</code></td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td><code>git checkout branch-name</code> <br> <code>git switch branch-name</code></td>\n<td>切换分支</td>\n</tr>\n<tr>\n<td><code>git merge branch-name</code></td>\n<td>合并分支</td>\n</tr>\n<tr>\n<td><code>git branch -d branch-name</code> 【已合并】<br> <code>git branch -D branch-name</code> 【未合并】</td>\n<td>删除分支</td>\n</tr>\n<tr>\n<td><code>git log --graph --oneline --decorate --all</code></td>\n<td>查看分支图</td>\n</tr>\n</tbody>\n</table>\n<img data-src=\"/2024/08/22/git/image-20240820135909011.png\" class title=\"image-20240820135909011\">\n<h1 id=\"解决合并冲突\"><a class=\"anchor\" href=\"#解决合并冲突\">#</a> 解决合并冲突</h1>\n<blockquote>\n<p>如果两个分支修改了同一个文件的同一行代码，Git 就不知道该保留哪个分支的修改内容，也就产生了冲突</p>\n</blockquote>\n<ul>\n<li>手动解决一下冲突，看一下要保留哪个内容</li>\n</ul>\n<h1 id=\"rebase\"><a class=\"anchor\" href=\"#rebase\">#</a> rebase</h1>\n<ul>\n<li>在不同分支上执行 <code>rebase</code>  命令</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240820141035186.png\" class title=\"image-20240820141035186\">\n<ul>\n<li>\n<p>使用 <code>alias</code>  对命令进行重命名</p>\n<ul>\n<li>如： <code>alias graph=&quot;git log --oneline --graph --decorate --all&quot;</code></li>\n</ul>\n</li>\n<li>\n<p>示例</p>\n<ul>\n<li>在 dev 分支上</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240820142226668.png\" class title=\"image-20240820142226668\">\n<ul>\n<li>在 main 分支上</li>\n</ul>\n<img data-src=\"/2024/08/22/git/image-20240820142302991.png\" class title=\"image-20240820142302991\">\n</li>\n<li>\n<p>Merge</p>\n<ul>\n<li>优点：不会破坏原分支的提交历史，方便回溯和查看</li>\n<li>缺点：会产生额外的提交节点，分支图比较复杂</li>\n</ul>\n</li>\n<li>\n<p>Rebase</p>\n<ul>\n<li>优点：不会新增额外的提交记录，形成线性历史，比较直观和干净</li>\n<li>缺点：会改变提交历史，改变了当前分支 branch out 的节点。需要避免在共享分支使用</li>\n</ul>\n</li>\n<li>\n<p>一般来说，如果只是想把两个分支合并起来，不关心提交历史，使用 <code>git merge</code> ；如果确定只有自己在一个分支上开发，并且希望提交历史更加清晰明了，则使用 <code>rebase</code></p>\n</li>\n</ul>\n<h1 id=\"分支管理和工作流模型\"><a class=\"anchor\" href=\"#分支管理和工作流模型\">#</a> 分支管理和工作流模型</h1>\n<ul>\n<li>\n<p>GitFlow</p>\n</li>\n<li>\n<p>GitHub Flow</p>\n</li>\n<li>\n<p>分支命名</p>\n<ul>\n<li>推荐使用带有意义的描述性名称来命名分支</li>\n<li>版本发布分支 / Tag 示例：v1.0.0</li>\n<li>功能分支示例：feature-login-page</li>\n<li>修复分支示例：hotfix-#issueid-desc</li>\n</ul>\n</li>\n<li>\n<p>分支管理</p>\n<ul>\n<li>定期合并已经成功验证的分支，及时删除已经合并的分支</li>\n<li>保存合适的分支数量</li>\n<li>为分支设置合适的管理权限</li>\n</ul>\n</li>\n</ul>\n","tags":["git"]},{"title":"hexo+github搭建个人博客","url":"/2024/08/22/hexo-github/","content":"<h2 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h2>\n<h3 id=\"安装-nodejs\"><a class=\"anchor\" href=\"#安装-nodejs\">#</a> 安装 Node.js</h3>\n<ul>\n<li>\n<p>直接到官网上下载安装即可 https://nodejs.org/en/download/</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL25vZGVqcy5vcmcv\">Node.js</span> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p>\n</li>\n<li>\n<p>Node 自带 npm</p>\n</li>\n</ul>\n</li>\n<li>\n<p>npm 换源</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npmmirror.com\t淘宝</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://npm.aliyun.com\t阿里云</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry http://mirrors.cloud.tencent.com/npm/\t腾讯云</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://mirrors.huaweicloud.com/repository/npm/\t华为云</pre></td></tr></table></figure><h3 id=\"安装-git\"><a class=\"anchor\" href=\"#安装-git\">#</a> 安装 Git</h3>\n<ul>\n<li>Windows：下载并安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZC93aW4=\">git</span>.</li>\n</ul>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822221459779.png\" class title=\"image-20240822221459779\">\n<h2 id=\"安装-hexo\"><a class=\"anchor\" href=\"#安装-hexo\">#</a> 安装 Hexo</h2>\n<ol>\n<li>安装 hexo</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo-cli</pre></td></tr></table></figure><ol start=\"2\">\n<li>输入 <code>hexo -v</code>  查看版本</li>\n</ol>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822222408728.png\" class title=\"image-20240822222408728\">\n<ol start=\"3\">\n<li>初始化 hexo，新建存储博客的文件夹</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo init myblog</pre></td></tr></table></figure><img data-src=\"/2024/08/22/hexo-github/image-20240822223608445.png\" class title=\"image-20240822223608445\">\n<img data-src=\"/2024/08/22/hexo-github/image-20240822222648014.png\" class title=\"image-20240822222648014\">\n<ol start=\"4\">\n<li>进入文件夹，安装 npm</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> myblog</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>hexo 安装成功</li>\n</ol>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822223030188.png\" class title=\"image-20240822223030188\">\n<ol start=\"6\">\n<li>启动服务站点</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo g  或  hexo generate</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo s  或  hexo server</pre></td></tr></table></figure><ol start=\"7\">\n<li>本地访问：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000/</span></li>\n</ol>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822223722079.png\" class title=\"image-20240822223722079\">\n<h2 id=\"github上建站访问\"><a class=\"anchor\" href=\"#github上建站访问\">#</a> GitHub 上建站访问</h2>\n<h3 id=\"新建仓库\"><a class=\"anchor\" href=\"#新建仓库\">#</a> 新建仓库</h3>\n<ul>\n<li>仓库名称限制为：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS0rLWk2OGExODRiZm9zLmdpdGh1Yi5pbw==\">用户名 +.github.io</span></li>\n</ul>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822224436979.png\" class title=\"image-20240822224436979\">\n<h3 id=\"安装-hexo-上传插件\"><a class=\"anchor\" href=\"#安装-hexo-上传插件\">#</a> 安装 hexo 上传插件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h3 id=\"修改-hexo-配置文件指定仓库路径\"><a class=\"anchor\" href=\"#修改-hexo-配置文件指定仓库路径\">#</a> 修改 hexo 配置文件指定仓库路径</h3>\n<ul>\n<li>修改 <code>_config.yml</code> ，找到 <code># Deploymentdeploy</code></li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> 你的github仓库路径  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master</pre></td></tr></table></figure><img data-src=\"/2024/08/22/hexo-github/image-20240822224743575.png\" class title=\"image-20240822224743575\">\n<h3 id=\"推送站点到-github\"><a class=\"anchor\" href=\"#推送站点到-github\">#</a> 推送站点到 github</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo d</pre></td></tr></table></figure><ul>\n<li>推送过程中需要输入你的 github 用户名和密码，密码需要用官方的 token 或者采用 ssh 公私钥访问。</li>\n<li>解决方式：\n<ul>\n<li>创建一个新 token，把它当密码输入即可\n<ul>\n<li><code>setting-&gt;Developer Settings-&gt;Prosonal access tokens</code></li>\n</ul>\n</li>\n<li>采用 ssh 公私钥访问</li>\n</ul>\n</li>\n<li>上传成功</li>\n</ul>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822225300030.png\" class title=\"image-20240822225300030\">\n<h3 id=\"输入网址访问\"><a class=\"anchor\" href=\"#输入网址访问\">#</a> 输入网址访问</h3>\n<ul>\n<li><a href=\"https://iruricatt.github.io/\">https://iruricatt.github.io/</a></li>\n</ul>\n<h2 id=\"更换主题\"><a class=\"anchor\" href=\"#更换主题\">#</a> 更换主题</h2>\n<blockquote>\n<p>本文使用的主题是：shako</p>\n</blockquote>\n<h3 id=\"下载主题并配置\"><a class=\"anchor\" href=\"#下载主题并配置\">#</a> 下载主题并配置</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> myblog</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><ul>\n<li>下载完成后，文件会出现在 <code>theme</code>  目录下</li>\n</ul>\n<img data-src=\"/2024/08/22/hexo-github/image-20240822230244034.png\" class title=\"image-20240822230244034\">\n<ul>\n<li>编辑博客根目录下的 <code>_config.yml</code>  , 搜索 <code>theme</code> ，修改为：</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr></table></figure><ul>\n<li>删除 <code>_config.landscape.yml</code> ，这是 hexo 默认主题的配置文件，建议删除</li>\n</ul>\n<h3 id=\"切换语言包\"><a class=\"anchor\" href=\"#切换语言包\">#</a> 切换语言包</h3>\n<ul>\n<li>编辑博客根目录下的 <code>_config.yml</code>  , 搜索 <code>language</code></li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr></table></figure><h3 id=\"安装插件\"><a class=\"anchor\" href=\"#安装插件\">#</a> 安装插件</h3>\n<h4 id=\"hexo-renderer-multi-markdown-it\"><a class=\"anchor\" href=\"#hexo-renderer-multi-markdown-it\">#</a> hexo-renderer-multi-markdown-it</h4>\n<ol>\n<li>卸载掉默认的 hexo-renderer-marked ，以及别的 markdown 文件渲染器。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在博客根目录下用如下命令进行插件安装</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>编辑 <code>_config.yml</code> , 配置插件参数，在合适位置添加</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>继续编辑  <code>_config.yml</code>  , 找到如下字段</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">wrap</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">hljs</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><p>将 <code>enable: true</code>  改成 <code>enable: false</code></p>\n<h4 id=\"hexo-autoprefixer\"><a class=\"anchor\" href=\"#hexo-autoprefixer\">#</a> hexo-autoprefixer</h4>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-autoprefixer <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>编辑  <code>_config.yml</code>  ，合适位置加入</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr></table></figure><h4 id=\"hexo-lightning-minify\"><a class=\"anchor\" href=\"#hexo-lightning-minify\">#</a> hexo-lightning-minify</h4>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-lightning-minify</pre></td></tr></table></figure><ol start=\"2\">\n<li>编辑  <code>_config.yml</code>  ，合适位置加入</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># ShokaX 自带 esbuild 优化，不建议开启，其他主题建议开启</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除文件，接受 string []，需符合 micromatch 格式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启 CSS 优化</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\">= 0.5%\"</span> <span class=\"token comment\"># browserslist 格式的 target</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除文件，接受 string []，需符合 micromatch 格式</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">minifier</span><span class=\"token punctuation\">:</span> html<span class=\"token punctuation\">-</span>minifier</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启 HTML 优化</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">comments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 是否保留注释内容</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除文件，接受 string []，需符合 micromatch 格式</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 开启图片预处理和自动 WebP 化</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token key atrule\">avif</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token key atrule\">webp</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 预留配置项，现版本无作用</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token key atrule\">quality</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> <span class=\"token comment\"># 质量，支持 1-100 的整数、lossless 或 nearLossless</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token key atrule\">effort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token comment\"># CPU 工作量，0-6 之间的整数 (越低越快)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token key atrule\">replaceSrc</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 自动替换生成 html 中的本地图片链接为 webp 链接</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\"># 我们更建议使用 Service Worker 来在用户侧实现 replaceSrc 的功能，这将能够以一种侵入式更小的方式实现链接替换</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    exclude<span class=\"token punctuation\">:</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>修改 <code>hexo-lightning-minify/lib/img.js</code> ，这样转换格式之后会覆盖原图片</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//transformImage 函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> promises_1<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span><span class=\"token function\">access</span><span class=\"token punctuation\">(</span>webpImagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sharp_1<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sourceImagePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">webp</span><span class=\"token punctuation\">(</span>sharpOptions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span>webpImagePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">info</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Converted </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imagePath<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> to WebP (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>info<span class=\"token punctuation\">.</span>size<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> bytes)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        \t<span class=\"token comment\">// 添加如下内容</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        \t<span class=\"token comment\">// ----------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">// 检查转换后的图片是否成功写入文件系统</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>size <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token comment\">// 如果成功，删除原始图片</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">return</span> promises_1<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>sourceImagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        \t<span class=\"token comment\">// ----------</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input file is missing'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                firstRun <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error converting </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>imagePath<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> to WebP:</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"hexo-asset-image\"><a class=\"anchor\" href=\"#hexo-asset-image\">#</a> hexo-asset-image</h4>\n<blockquote>\n<p>在 Hexo 中引入本地图片而不用图床</p>\n</blockquote>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> https://github.com/xcodebuild/hexo-asset-image.git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>修改项目根目录下的 <code>_config.yml</code>  文件参数 <code>post_asset_folder</code>  值为 <code>true</code></li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 开始使用本地静态资源</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">post_asset_folder</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>完成上述配置后，在使用命令 <code>hexo new post</code>  新建文章时，将会在 <code>source/_posts</code>  目录下创建一个与文章同名的目录。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo new post <span class=\"token string\">\"测试文章\"</span></pre></td></tr></table></figure><pre><code>|____scaffolds\n|____source\n| |_____posts\n| | |____测试文章.md\n| | |____测试文章 # 与文章同名的目录，用于保存在文章中引入的本地图片资源\n|____themes\n</code></pre>\n<ol start=\"4\">\n<li>引用</li>\n</ol>\n<img data-src=\"/2024/08/22/hexo-github/image-20240823015354260.png\" class title=\"image-20240823015354260\">\n<h4 id=\"hexo-image-link\"><a class=\"anchor\" href=\"#hexo-image-link\">#</a> hexo-image-link</h4>\n<blockquote>\n<p>Hexo 上 markdown 图片路径与 Typora 保持一致</p>\n</blockquote>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-image-link <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>打开 Hexo 资源管理配置开关</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># _config.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">post_asset_folder</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h4 id=\"hexo-symbols-count-time\"><a class=\"anchor\" href=\"#hexo-symbols-count-time\">#</a> hexo-symbols-count-time</h4>\n<blockquote>\n<p>统计页面或者站点的单词以及阅读所需时间</p>\n</blockquote>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-symbols-count-time</pre></td></tr></table></figure><ol start=\"2\">\n<li>编辑 <code>_config.yml</code> ，修改以下内容</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">footer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># Specify the date when the site was setup. If not defined, current year will be used.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">since</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2010</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> sakura rotate</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># Change the color of icon, using Hex Code.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">color</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#ffc0cb\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">powered</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h3 id=\"其他配置\"><a class=\"anchor\" href=\"#其他配置\">#</a> 其他配置</h3>\n<h4 id=\"修改图库\"><a class=\"anchor\" href=\"#修改图库\">#</a> 修改图库</h4>\n<ul>\n<li>默认的图片列表位于 <code>/themes/shoka/_images.yml</code>  中</li>\n<li>在图片列表 yml 文件中，写上任意外链图片地址</li>\n<li>此处使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWN1aS5jbi8=\"> PICUI</span> 存储图片</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0d10b26a.png</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0a9ead74.png</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0a5b6deb.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0a4c555f.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0a4a4f14.jpg</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0a3d8384.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d0a2ef2fd.jpg</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d07600f66.jpg</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c4d07601b05.jpg</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c5702de9e58.jpg</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//img.picui.cn/free/2024/08/21/66c5702be1c36.jpg</pre></td></tr></table></figure><h2 id=\"问题汇总\"><a class=\"anchor\" href=\"#问题汇总\">#</a> 问题汇总</h2>\n<h3 id=\"github-连接不上\"><a class=\"anchor\" href=\"#github-连接不上\">#</a> GitHub 连接不上</h3>\n<ul>\n<li>解决方法：取消代理</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> http.proxy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> https.proxy</pre></td></tr></table></figure><ul>\n<li>查看代理</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--get</span> http.proxy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--get</span> https.proxy</pre></td></tr></table></figure><h3 id=\"br换行符识别不了\"><a class=\"anchor\" href=\"#br换行符识别不了\">#</a>  <code>&lt;br&gt;</code>  换行符识别不了</h3>\n<ul>\n<li>解决方法：</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># _config.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr></table></figure><h3 id=\"代码块渲染问题\"><a class=\"anchor\" href=\"#代码块渲染问题\">#</a> 代码块渲染问题</h3>\n<ul>\n<li>解决方法：修改 package.json 文件</li>\n</ul>\n<ol>\n<li>\n<p>修改 hexo 的 package.json 的文件内容，将 shoka 的 example 目录中的 package.json 文件的内容拷贝到 hexo 的 package.json 中即可</p>\n</li>\n<li>\n<p>修改完 package.json 文件内容后执行下面的命令降级 hexo</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo@5.4.2</pre></td></tr></table></figure><ol start=\"3\">\n<li>然后在 hexo 目录下更新依赖</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>然后重新生成即可</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo clean <span class=\"token operator\">&amp;&amp;</span> hexo g <span class=\"token operator\">&amp;&amp;</span> hexo s</pre></td></tr></table></figure><h2 id=\"参考文章\"><a class=\"anchor\" href=\"#参考文章\">#</a> 参考文章</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTAxOTM1MC9hcnRpY2xlL2RldGFpbHMvMTIxOTAxNDMz\">https://blog.csdn.net/weixin_45019350/article/details/121901433</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm1vZWh6LmNvbS9hcmNoaXZlcy9oZXhvLXNob2thLWJ1aWxkLmh0bWw=\">https://blog.moehz.com/archives/hexo-shoka-build.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbGdvcml0aG1vZmRpc2gudGVjaC8yMDIxLzA1LzA1L2hleG8tc2hhbmctbWFya2Rvd24tdHUtcGlhbi1sdS1qaW5nLXl1LXR5cG9yYS1iYW8tY2hpLXlpLXpoaS8=\">https://algorithmofdish.tech/2021/05/05/hexo-shang-markdown-tu-pian-lu-jing-yu-typora-bao-chi-yi-zhi/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbnVjY2NoL3AvMTcwMTA0NzEuaHRtbA==\">https://www.cnblogs.com/nuccch/p/17010471.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWdwaWdsZXRzZ28uZ2l0aHViLmlvL2hleG8vc2hva2EvJUU5JTg1JThEJUU3JUJEJUFFc2hva2ElRTQlQjglQkIlRTklQTIlOTgv\">https://pigpigletsgo.github.io/hexo/shoka/ 配置 shoka 主题 /</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLw==\">https://docs.kaitaku.xyz/guide/</span></li>\n</ul>\n","tags":["hexo"]}]